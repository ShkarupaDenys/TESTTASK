{"ast":null,"code":"var _jsxFileName = \"/Users/shkarupadenis/Documents/personal/TESTTASK/src/views/components/Button/Button.tsx\";\nimport { Preloader } from 'views/icons/Preloader';\nimport classNames from 'classnames';\nimport './Button.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Button = _ref => {\n  let {\n    path,\n    size = 'sm',\n    type = 'button',\n    loading,\n    content,\n    className,\n    disabled = false,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: path ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `#${path}`,\n      className: classNames('button', `button--${size}`, className),\n      children: !loading ? content : /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: type,\n      disabled: disabled,\n      className: classNames('button', `button--${size}`, className),\n      onClick: onClick,\n      children: !loading ? content : /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["Preloader","classNames","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","_ref","path","size","type","loading","content","className","disabled","onClick","children","href","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shkarupadenis/Documents/personal/TESTTASK/src/views/components/Button/Button.tsx"],"sourcesContent":["import { Preloader } from 'views/icons/Preloader';\nimport classNames from 'classnames';\nimport './Button.scss';\n\ninterface Props {\n  path?: string;\n  disabled?: boolean;\n  loading?: boolean;\n  content: string;\n  className?: string;\n  type?: 'button' | 'submit';\n  size?: 'sm' | 'md';\n  onClick?: () => void;\n}\n\nexport const Button: React.FC<Props> = ({\n  path,\n  size = 'sm',\n  type = 'button',\n  loading,\n  content,\n  className,\n  disabled = false,\n  onClick,\n}) => (\n  <>\n    {path ? (\n      <a\n        href={`#${path}`}\n        className={classNames(\n          'button',\n          `button--${size}`,\n          className,\n        )}\n      >\n        {!loading ? content : <Preloader />}\n      </a>\n    ) : (\n      <button\n        type={type}\n        disabled={disabled}\n        className={classNames(\n          'button',\n          `button--${size}`,\n          className,\n        )}\n        onClick={onClick}\n      >\n        {!loading ? content : <Preloader />}\n      </button>\n    )}\n  </>\n);\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,uBAAuB;AACjD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAavB,OAAO,MAAMC,MAAuB,GAAGC,IAAA;EAAA,IAAC;IACtCC,IAAI;IACJC,IAAI,GAAG,IAAI;IACXC,IAAI,GAAG,QAAQ;IACfC,OAAO;IACPC,OAAO;IACPC,SAAS;IACTC,QAAQ,GAAG,KAAK;IAChBC;EACF,CAAC,GAAAR,IAAA;EAAA,oBACCJ,OAAA,CAAAE,SAAA;IAAAW,QAAA,EACGR,IAAI,gBACHL,OAAA;MACEc,IAAI,EAAG,IAAGT,IAAK,EAAE;MACjBK,SAAS,EAAEZ,UAAU,CACnB,QAAQ,EACP,WAAUQ,IAAK,EAAC,EACjBI,SACF,CAAE;MAAAG,QAAA,EAED,CAACL,OAAO,GAAGC,OAAO,gBAAGT,OAAA,CAACH,SAAS;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,gBAEJlB,OAAA;MACEO,IAAI,EAAEA,IAAK;MACXI,QAAQ,EAAEA,QAAS;MACnBD,SAAS,EAAEZ,UAAU,CACnB,QAAQ,EACP,WAAUQ,IAAK,EAAC,EACjBI,SACF,CAAE;MACFE,OAAO,EAAEA,OAAQ;MAAAC,QAAA,EAEhB,CAACL,OAAO,GAAGC,OAAO,gBAAGT,OAAA,CAACH,SAAS;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EACT,gBACD,CAAC;AAAA,CACJ;AAACC,EAAA,GArCWhB,MAAuB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}