{"ast":null,"code":"import{Errors}from'types/Errors';export var API='https://frontend-test-assignment-api.abz.agency';function request(url){var method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';var data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var token=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'';var options={method:method};if(data){options.body=data;options.headers={'Token':token};}return fetch(API+url,options).then(function(response){if(!response.ok){throw new Error('Something went wrong.');}if(!response.headers.get('content-type').includes('application/json')){throw new Error('Content type is not supported.');}if(response.status===404){throw new Error('Page not found');}if(response.status===409){throw new Error(Errors.status409).message;}return response.json();});}export var client={get:function get(url){return request(url);},post:function post(url,formData,token){return request(url,'POST',formData,token);}};","map":{"version":3,"names":["Errors","API","request","url","method","arguments","length","undefined","data","token","options","body","headers","fetch","then","response","ok","Error","get","includes","status","status409","message","json","client","post","formData"],"sources":["/Users/shkarupadenis/Documents/personal/TESTTASK/src/utils/fetchClient.ts"],"sourcesContent":["import { Errors } from 'types/Errors';\n\nexport const API = 'https://frontend-test-assignment-api.abz.agency';\n\ntype RequestMethod = 'GET' | 'POST';\n\nfunction request(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: FormData = null,\n  token = '',\n) {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = data;\n    options.headers = {\n      'Token': token,\n    };\n  }\n\n  return fetch(API + url, options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong.');\n      }\n\n      if (!response.headers.get('content-type').includes('application/json')) {\n        throw new Error('Content type is not supported.');\n      }\n\n      if (response.status === 404) {\n        throw new Error('Page not found');\n      }\n\n      if (response.status === 409) {\n        throw new Error(Errors.status409).message;\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: (url: string) => request(url),\n  post: (url: string, formData: FormData, token: string) => {\n    return request(url, 'POST', formData, token);\n  },\n};\n"],"mappings":"AAAA,OAASA,MAAM,KAAQ,cAAc,CAErC,MAAO,IAAM,CAAAC,GAAG,CAAG,iDAAiD,CAIpE,QAAS,CAAAC,OAAOA,CACdC,GAAW,CAIX,IAHA,CAAAC,MAAqB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,IAC7B,CAAAG,IAAc,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IACrB,CAAAI,KAAK,CAAAJ,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAEV,GAAM,CAAAK,OAAoB,CAAG,CAAEN,MAAM,CAANA,MAAO,CAAC,CAEvC,GAAII,IAAI,CAAE,CACRE,OAAO,CAACC,IAAI,CAAGH,IAAI,CACnBE,OAAO,CAACE,OAAO,CAAG,CAChB,OAAO,CAAEH,KACX,CAAC,CACH,CAEA,MAAO,CAAAI,KAAK,CAACZ,GAAG,CAAGE,GAAG,CAAEO,OAAO,CAAC,CAC7BI,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CAEA,GAAI,CAACF,QAAQ,CAACH,OAAO,CAACM,GAAG,CAAC,cAAc,CAAC,CAACC,QAAQ,CAAC,kBAAkB,CAAC,CAAE,CACtE,KAAM,IAAI,CAAAF,KAAK,CAAC,gCAAgC,CAAC,CACnD,CAEA,GAAIF,QAAQ,CAACK,MAAM,GAAK,GAAG,CAAE,CAC3B,KAAM,IAAI,CAAAH,KAAK,CAAC,gBAAgB,CAAC,CACnC,CAEA,GAAIF,QAAQ,CAACK,MAAM,GAAK,GAAG,CAAE,CAC3B,KAAM,IAAI,CAAAH,KAAK,CAACjB,MAAM,CAACqB,SAAS,CAAC,CAACC,OAAO,CAC3C,CAEA,MAAO,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CACxB,CAAC,CAAC,CACN,CAEA,MAAO,IAAM,CAAAC,MAAM,CAAG,CACpBN,GAAG,CAAE,SAAAA,IAACf,GAAW,QAAK,CAAAD,OAAO,CAACC,GAAG,CAAC,GAClCsB,IAAI,CAAE,SAAAA,KAACtB,GAAW,CAAEuB,QAAkB,CAAEjB,KAAa,CAAK,CACxD,MAAO,CAAAP,OAAO,CAACC,GAAG,CAAE,MAAM,CAAEuB,QAAQ,CAAEjB,KAAK,CAAC,CAC9C,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}